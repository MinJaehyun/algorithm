void main() {
  List<int> numList = [13, 5, 11, 7, 23, 15];
  List<int> newList = [...numList];
  int temp = 0;

  for (int i = 0; i < newList.length; i++) {
    // i=0
    for (int j = i + 1; j < newList.length; j++) {
      // j=1~5
      if (newList[i] > newList[j]) {
        // 13 > 5
        temp = newList[j]; // temp = 5
        newList[j] = newList[i]; // 5 <- 13
        newList[i] = temp; // 13 <- 5
      }
    }
  }

  print(newList);
}

/** 선택 정렬 
 * 
 * 흐름: 최초 [13, 5, 11, 7, 23, 15]
 * 
 * 
 * 1. 1회독 시,
 *  1) 앞에 index 0을 고정하여 index+1 부터 끝까지 비교한다
 *  2) 13과 5를 비교하여 작은 수를 앞에 위치시키고
 *  3) 5와 11을 비교하여 작은 수를 앞에 위치시키고
 *  4) 5와 7을 비교하여 작은 수를 앞에 위치시키고
 *  5) 5와 23을 비교하여 작은 수를 앞에 위치시키고
 *  6) 5와 15를 비교하여 작은 수를 앞에 위치시킨다.
 *  * 결과: [5, 13, 11, 7, 23, 15]
 * 
 * 
 * 2. 2회독 시,
 *  1) 앞에 index 1을 고정하여 index+1 부터 끝까지 비교한다. [5, 13, 11, 7, 23, 15]
 *  2) 13와 11을 비교하여 작은 수를 앞에 위치시키고, [5, 11, 13, 7, 23, 15] 
 *  3) 11와 7을 비교하여 작은 수를 앞에 위치시키고, [5, 7, 13, 11, 23, 15] 
 *  4) 7와 11을 비교하여 작은 수를 앞에 위치시키고, [5, 7, 13, 11, 23, 15] 
 *  5) 7와 23을 비교하여 작은 수를 앞에 위치시키고, [5, 7, 13, 11, 23, 15] 
 *  6) 7와 15를 비교하여 작은 수를 앞에 위치시키고, [5, 7, 13, 11, 23, 15] 
 *  * 결과: [5, 7, 13, 11, 23, 15]
 * 
 * 3. 끝까지 회독
 * */
